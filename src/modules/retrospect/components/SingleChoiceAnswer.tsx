import React from "react";

const choiceOptions: { [key: string]: string[] } = {
  "Ïò§ÎäòÏùò ÎÇ†Ïî®Îäî?": ["‚òÄÔ∏è", "üå§Ô∏è", "‚õàÔ∏è", "‚ùÑÔ∏è"],
  "ÏßÄÍ∏à ÎÇòÏùò Ïª®ÎîîÏÖòÏùÄ?": ["üí™", "üòê", "üò¥", "ü§í"],
  "Ïò§Îäò ÎÇòÏùò Í∏∞Î∂ÑÏùÄ?": ["üòÄ", "üò¢", "üò°", "üòå"],
};

const emojiKeywordMap: { [key: string]: { [emoji: string]: string } } = {
  "Ïò§ÎäòÏùò ÎÇ†Ïî®Îäî?": { "‚òÄÔ∏è": "sunny", "üå§Ô∏è": "partly_sunny", "‚õàÔ∏è": "thunderstorm", "‚ùÑÔ∏è": "snow" },
  "ÏßÄÍ∏à ÎÇòÏùò Ïª®ÎîîÏÖòÏùÄ?": { "üí™": "strong", "üòê": "neutral", "üò¥": "sleepy", "ü§í": "sick" },
  "Ïò§Îäò ÎÇòÏùò Í∏∞Î∂ÑÏùÄ?": { "üòÄ": "happy", "üò¢": "sad", "üò°": "angry", "üòå": "calm" },
};

const getEmojiFromKeyword = (question: string, keyword: string): string => {
  const map = emojiKeywordMap[question] || {};
  return Object.keys(map).find((emoji) => map[emoji] === keyword) || keyword;
};

const getKeywordFromEmoji = (question: string, emoji: string): string => {
  return emojiKeywordMap[question]?.[emoji] || emoji;
};

const SingleChoiceAnswer = ({
  question,
  value,
  onSelect,
}: {
  question: string;
  value?: string;
  onSelect: (v: string) => void;
}) => {
  const options = choiceOptions[question] || ["‚úÖ", "‚ùå"];

  return (
    <div className="flex justify-center space-x-2">
      {options.map((emoji) => (
        <button
          key={emoji}
          className={`p-3 border rounded transition-all text-3xl ${value === getKeywordFromEmoji(question, emoji)
            ? "bg-black text-white dark:bg-gray-700 dark:text-white border-gray-600"
            : "bg-white text-black dark:bg-gray-800 dark:text-gray-300 border-gray-600"
            }`}
          onClick={() => onSelect(getKeywordFromEmoji(question, emoji))}
        >
          {emoji}
        </button>
      ))}
    </div>
  );
};

export default SingleChoiceAnswer;
